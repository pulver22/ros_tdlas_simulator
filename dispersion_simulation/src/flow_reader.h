#ifndef FLOW_READER_H
#define FLOW_READER_H

#include "utility.h"
#include "flow.h"
#include <stdio.h>

enum eFlowReaderState {
	cFlowReaderState_Default,
	cFlowReaderState_BeginningOfCol,
	cFlowReaderState_BeginningOfRow,
	cFlowReaderState_BeginningOfPag,
	cFlowReaderState_Comment,
};

struct sFlowReader {
	struct sFlow *flow;
	int filedes;

	struct {
		char buffer[128];
		int bufferlen;  
		int bufferpos;  
	enum eFlowReaderState state;
		int col; 
		int row;
		int page; //3d
	} parser;

	struct {
		int col; 
		int row; 
		int page; //3d
		double value;
	} item;
};

// BEGIN - GENERATED BY C-UPDATE-HEADER
// Initialize the flow_reader structure
void flow_reader_init(struct sFlowReader *fr, struct sFlow *flow, int flagFirstTime);
// Called every now and then to update everything
void flow_reader_read(struct sFlowReader *fr, char *filename, double ***array);
int flow_reader_next_item(struct sFlowReader *fr);
// END - GENERATED BY C-UPDATE-HEADER

#endif
