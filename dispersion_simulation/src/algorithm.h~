#ifdef __cplusplus
 extern "C" {
 #endif

#ifndef ALGORITHM_H
#define ALGORITHM_H

#include "foamToFilament.h"
#include "utility.h"
#include "flow.h"
#include "flow_reader.h"
#include "environment.h"
#include "hit_rate.h"
#include "filament.h"
//#include "display.h"
#include <stdio.h>
//100
#define NUM_FILAMENT 300
//#define NUM_SNAPSHOT 100

#define WIND_DATA	"/home/ali/ros_workspace/odor_simulation/dispersion_simulation/CSV/Velocity0."

//../CSV/Velocity0.
struct sAlgorithm {

	struct sFlow flow;
	struct sFlowReader fr;
	struct sHitRate hit_rate;
	//struct sFilament Filament;
	struct sFilament filament[NUM_FILAMENT*NUM_SNAPSHOT]; //sepid
 	struct sEnvironment environment;

	struct {
		double x;
		double y;
		double z;//3d
	} source;

	struct {
		int steps_count;
	} state;


struct 
{	
double counter;
double x[NUM_FILAMENT*NUM_FILAMENT];
double y[NUM_FILAMENT*NUM_FILAMENT];
double z[NUM_FILAMENT*NUM_FILAMENT]; //3d
double width[NUM_FILAMENT*NUM_FILAMENT];
double colour[NUM_FILAMENT*NUM_FILAMENT];

} marker;

};

// BEGIN - GENERATED BY C-UPDATE-HEADER
// Initialize the algorithm structure

char output1 [256];
char output2 [256];
int n;
void algorithm_init();
void algorithm_calculate_all();
// Calculates one hit_rate
int algorithm_hit_rate_calculate(double x1, double y1, double z1, double x2, double y2, double z2); //3d

extern double concentration(int xx, int yy, int zz);

// END - GENERATED BY C-UPDATE-HEADER

#endif

#ifdef __cplusplus
 }
 #endif
